-- Bootstrap lazy.nvim
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not (vim.uv or vim.loop).fs_stat(lazypath) then
  local lazyrepo = "https://github.com/folke/lazy.nvim.git"
  local out = vim.fn.system({ "git", "clone", "--filter=blob:none", "--branch=stable", lazyrepo, lazypath })
  if vim.v.shell_error ~= 0 then
    vim.api.nvim_echo({
      { "Failed to clone lazy.nvim:\n", "ErrorMsg" },
      { out, "WarningMsg" },
      { "\nPress any key to exit..." },
    }, true, {})
    vim.fn.getchar()
    os.exit(1)
  end
end
vim.opt.rtp:prepend(lazypath)
require("lazy").setup({

  -- lazy.nvim manages itself
  { "folke/lazy.nvim" },

  -- Packer replacement
  { "wbthomason/packer.nvim", lazy = true },

  -- Colorschemes
  { "srcery-colors/srcery-vim", name = "srcery" },
  { "blazkowolf/gruber-darker.nvim" },
  { "catppuccin/nvim", name = "catppuccin" },
  { "aktersnurra/no-clown-fiesta.nvim" },
  { "Everblush/nvim", name = "everblush" },
  {
    "uloco/bluloco.nvim",
    dependencies = { "rktjmp/lush.nvim" }
  },
  { "rafi/awesome-vim-colorschemes" },
  { "xero/miasma.nvim" },
  { "rose-pine/neovim", name = "rose-pine" },

  -- Nvim-tree
  { "nvim-tree/nvim-tree.lua", dependencies = { "nvim-tree/nvim-web-devicons" } },

  -- Harpoon
  { "ThePrimeagen/harpoon", lazy = false },

  -- ThePrimeagen's game
  { "ThePrimeagen/vim-be-good", cmd = "VimBeGood" },

  -- Autoformat
  { "vim-autoformat/vim-autoformat", cmd = { "Autoformat" } },
  { "darrikonn/vim-gofmt", ft = { "go" } },

  -- Terminal: Pick one
  {
    "akinsho/toggleterm.nvim",
    version = "*",
    config = true,
    cmd = { "ToggleTerm", "TermExec" },
  },

  -- Alternatively, this one (commented to avoid conflict)
  -- {
  --   "s1n7ax/nvim-terminal",
  --   config = function()
  --     vim.o.hidden = true
  --     require("nvim-terminal").setup()
  --   end,
  -- },

  -- Surround and Commentary
  { "tpope/vim-surround", event = "VeryLazy" },
  { "tpope/vim-commentary", event = "VeryLazy" },

  -- Telescope
  {
    "nvim-telescope/telescope.nvim",
    version = "0.1.1",
    dependencies = { "nvim-lua/plenary.nvim" },
    cmd = "Telescope",
  },

  -- Treesitter
  {
    "nvim-treesitter/nvim-treesitter",
    build = ":TSUpdate",
    event = { "BufReadPost", "BufNewFile" }
  },

  -- LSP Zero
  {
    "VonHeikemen/lsp-zero.nvim",
    branch = "v1.x",
    dependencies = {
      -- LSP Support
      { "neovim/nvim-lspconfig" },
      { "williamboman/mason.nvim" },
      { "williamboman/mason-lspconfig.nvim" },

      -- Autocompletion
      { "hrsh7th/nvim-cmp" },
      { "hrsh7th/cmp-buffer" },
      { "hrsh7th/cmp-path" },
      { "saadparwaiz1/cmp_luasnip" },
      { "hrsh7th/cmp-nvim-lsp" },
      { "hrsh7th/cmp-nvim-lua" },

      -- Snippets
      { "L3MON4D3/LuaSnip" },
      { "rafamadriz/friendly-snippets" },
    }
  }

})


-- config
vim.o.swapfile = false
vim.o.relativenumber = true
vim.cmd.colorscheme('rose-pine')
vim.cmd('set tabstop=4')
vim.cmd('set shiftwidth=4')

local builtin = require("telescope.builtin")
vim.g.mapleader = " "
vim.keymap.set('n', '<leader>pf', builtin.find_files, {})
vim.keymap.set('n', '<C-p>', builtin.git_files, {})
vim.keymap.set('n', '<leader>ps', function()
	builtin.grep_string({search = vim.fn.input("Grep > ") })
end)
